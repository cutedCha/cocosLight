{"version":3,"sources":["assets/demoMain.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// Learn TypeScript:\n//  - https://docs.cocos.com/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n\nimport { drawModule } from \"./drawModule\";\n\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class demoScene extends cc.Component {\n    @property(cc.Prefab)\n    drawItem: cc.Prefab = null;\n\n    static sceneInstance: demoScene = null;\n    // LIFE-CYCLE CALLBACKS:\n    protected onEnable(): void {\n        demoScene.sceneInstance = this;\n        cc.director.getCollisionManager().enabled = true; //开启碰撞检测，默认为关闭\n        cc.director.getCollisionManager().enabledDebugDraw = false; //开启碰撞检测范围的绘制\n        cc.director.getCollisionManager().enabledDrawBoundingBox = false; //开启碰撞组件的包围盒绘制\n        cc.director.getPhysicsManager().enabled = true;\n    }\n    onLoad() {}\n    radiusNode: cc.Node = null;\n    start() {\n        // 定义顶点数据格式，只需要指明所需的属性，避免造成存储空间的浪费\n\n        let node = (this.radiusNode = new cc.Node());\n\n        this.node.addChild(node);\n        node.setPosition(0, 0);\n\n        drawModule.renderNodeMesh(node, 1, 334);\n        this.bindTouchMove();\n    }\n    bindTouchMove() {\n        this.node.on(\n            cc.Node.EventType.TOUCH_START,\n            (eve: cc.Event.EventTouch) => {\n                let local = eve.getLocation();\n                local = this.node.convertToNodeSpaceAR(local);\n                this.radiusNode.setPosition(local);\n                drawModule.renderNodeMesh(this.radiusNode, 360, 334);\n            },\n            this\n        );\n\n        this.node.on(\n            cc.Node.EventType.TOUCH_MOVE,\n            (eve: cc.Event.EventTouch) => {\n                let local = eve.getLocation();\n                local = this.node.convertToNodeSpaceAR(local);\n                this.radiusNode.setPosition(local);\n                drawModule.renderNodeMesh(this.radiusNode, 360, 500);\n            },\n            this\n        );\n    }\n\n    update(dt) {\n        if (this.radiusNode) {\n            // drawModule.renderNodeMesh(this.radiusNode, 19, 334);\n        }\n    }\n}\n"]}